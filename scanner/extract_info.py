import lief
import zipfile
import tarfile
import io


lief.logging.disable()


class FileExtract:
	def __int__(self, file_data):
		self.file = file_data

	def get_info(self):
		try:
			if lief.is_pe(self.file):
				resources=[]
				hashes ={}
				headers={}
				pe_file = lief.PE.parse(self.file)
				hashes['imphash'] = lief.PE.get_imphash(pe_file)
				hashes['md5'] = pe_file.get_rich_header_hash('md5')
				headers['magic'] = "PE32" if pe_file.optional_header.magic == lief.PE.PE_TYPE.PE32 else "PE64"

				if pe_file.has_imports:
					for entry in pe_file.imports:
						entries={'dll': entry.name, 'section': entry.directory.section.name, 'entropy': entry.directory.section.entropy}
						imports=[]
						for impor in entry.imports:
							imports.append(impor.name)
						entries['imports'] = imports
						resources.append(entries)

				return headers, hashes, resources

			elif lief.is_elf(self.file):
				return "ELF"
			elif lief.is_macho(self.file):
				return "Mach-O"
			elif lief.is_dex(self.file):
				return "DEX"
			elif zipfile.is_zipfile(self.file):
				return "ZIP"
			elif tarfile.is_tarfile(self.file):
				return "TAR"

		except:
			return "Unknown format"



